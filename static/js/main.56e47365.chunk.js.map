{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["INGREDIENTS","id","name","type","description","macros","price","initialState","ingredients_ordered","amount","IngredientList","props","ingredientItems","ingredients","map","ingredient","Ingredient","className","AmountSelector","ingredientId","dispatch","React","BowlDispatch","AmountSlider","onChange","value","bowl_stats","BowlStatus","idx","findIndex","e","target","min","max","step","BowlStats","bowl_ingredients","elem","i","bowl_macros","reduce","acc","new_acc","Object","keys","forEach","macro","index","console","log","bowl_macros_render","toFixed","bowl_total","state","getBowlTotal","updateState","action","newIngredients","indexToMutate","ele","Error","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56e47365.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// @flow\nimport logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\n\nconst INGREDIENTS = [\n  {\n    id: 1,\n    name: \"Chestnut Brown Rice\",\n    type: \"carb\",\n    description: \"Brown rice toasted to a nutty perfection\",\n    macros: {\n      \"calories\": 1.11,\n      \"protein\": 0.026,\n      \"fat\": 0.009\n    },\n    price: 0.02\n  },\n  {\n    id: 2,\n    name: \"Free Range Fusilli\",\n    type: \"carb\",\n    description: \"Fusilli that was allowed to roam free during its lifetime\",\n    macros: {\n      \"calories\": 1.58,\n      \"protein\": 0.06,\n      \"fat\": 0.009\n    },\n    price: 0.015\n  },\n  {\n    id: 11,\n    name: \"Sous-vide Chicken Breast\",\n    type: \"protein\",\n    description: \"Chicken breast gently coaxed to doneness so it stays tender and moist\",\n    macros: {\n      \"calories\": 1.65,\n      \"protein\": 0.31,\n      \"fat\": 0.05\n    },\n    price: 0.035\n  },\n]\n\nconst initialState = {\n  ingredients_ordered: [\n    {\n      id: 1,\n      amount: 0\n    },\n    {\n      id: 2,\n      amount: 0\n    },\n    {\n      id: 11,\n      amount: 0\n    },\n  ],\n}\n\nfunction IngredientList(props): React.Node {\n  const ingredients = props.ingredients\n  const ingredientItems = ingredients.map((ingredient) => <Ingredient ingredient={ingredient} key={ingredient.id} />)\n  return (\n    <div className=\"IngredientList\">\n      {ingredientItems}\n    </div>\n  )\n}\n\nfunction Ingredient(props): React.Node {\n  return (\n    <div className=\"Ingredient\">\n      <b> {props.ingredient.id} {props.ingredient.name} </b>\n      {props.ingredient.description}\n      <AmountSelector ingredientId={props.ingredient.id} />\n    </div>\n  )\n}\n\nfunction AmountSelector(props): React.Node {\n  const dispatch = React.useContext(BowlDispatch)\n  function handleChange(value) {\n    dispatch({\n      type: \"changeAmount\",\n      id: props.ingredientId,\n      amount: value,\n    })\n  }\n  return (\n    <div className=\"AmountSelector\">\n      <AmountSlider onChange={handleChange} ingredientId={props.ingredientId} />\n    </div>\n  )\n}\n\nfunction AmountSlider(props): React.Node {\n  const bowl_stats = React.useContext(BowlStatus)\n  const idx = bowl_stats.ingredients_ordered.findIndex((e) => e.id === props.ingredientId)\n  return (\n    <input onChange={(e) => props.onChange(e.target.value)}\n      type=\"range\" min=\"0\" max=\"500\" step=\"10\"\n      value={bowl_stats.ingredients_ordered[idx].amount}\n    ></input>\n  )\n}\n\nconst BowlDispatch = React.createContext(null);\nconst BowlStatus = React.createContext(initialState);\n\nfunction getBowlTotal(state) {\n  // Helper function to calculate the total cost of the bowl\n  return state.ingredients_ordered.reduce((acc, elem) => {\n    const idx = INGREDIENTS.findIndex((e) => e.id === elem.id)\n    return acc + INGREDIENTS[idx].price * elem.amount\n  }, 0)\n}\n\nfunction getBowlMacros(state) {\n  // Helper function to calculate the total macros of a bowl\n  const initialMacros = {\n    \"calories\": 0,\n    \"protein\": 0,\n    \"fat\": 0\n  }\n  return state.ingredients_ordered.reduce((acc, elem) => {\n    const idx = INGREDIENTS.findIndex((e) => e.id === elem.id)\n    const new_acc = acc\n    Object.keys(new_acc).forEach((macro, index) => {\n      new_acc[macro] += INGREDIENTS[idx].macros[macro] * elem.amount\n    })\n    console.log(new_acc)\n    return new_acc\n  }, initialMacros)\n}\n\n\nfunction BowlStats(): React.Node {\n  const bowl_stats = React.useContext(BowlStatus)\n  const bowl_ingredients = bowl_stats.ingredients_ordered.map((elem) => {\n    const i = INGREDIENTS.findIndex((e) => e.id === elem.id)\n    return (\n      <div key={elem.id}>\n        {INGREDIENTS[i].name}: {elem.amount}g\n      </div>)\n  })\n  const bowl_macros = getBowlMacros(bowl_stats)\n  const bowl_macros_render = Object.keys(bowl_macros).map((macro) => {\n    return (\n      <div key={macro}>\n        {macro} : {bowl_macros[macro].toFixed(2)}\n      </div>\n    )\n  })\n  const bowl_total = getBowlTotal(bowl_stats)\n  return (\n    <div className=\"BowlStats\">\n      <p><b>Your Bowl:</b></p>\n      {bowl_ingredients}\n      <p><b> Macros: </b></p>\n      {bowl_macros_render}\n      <b> Total: </b> ${bowl_total.toFixed(2)}\n    </div>\n  )\n}\n\nfunction updateState(state, action) {\n  switch (action.type) {\n    case 'changeAmount':\n      const newIngredients = state.ingredients_ordered\n      // if id not in ingredients_ordered\n      // otherwise, update \n      const indexToMutate = newIngredients.findIndex((ele) => ele.id === action.id)\n      // note that this will bung up if indexToMutate finds -1\n      // [FIXME] fix this \n      newIngredients[indexToMutate].amount = action.amount\n      return { ingredients_ordered: newIngredients }\n    default:\n      throw new Error();\n  }\n}\n\nfunction App(): React.Node {\n  const [state, dispatch] = React.useReducer(updateState, initialState)\n  return (\n    <div className=\"App\" >\n      <h2>Bowls to the Gram</h2>\n      <p> Build your own bowl and get exactly the macros you need</p>\n      <BowlDispatch.Provider value={dispatch} >\n        <IngredientList ingredients={INGREDIENTS} />\n        <BowlStatus.Provider value={state} >\n          <BowlStats />\n        </BowlStatus.Provider>\n      </BowlDispatch.Provider>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}